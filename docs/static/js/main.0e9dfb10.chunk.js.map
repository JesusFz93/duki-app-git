{"version":3,"sources":["types/types.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","hooks/useForm.js","actions/ui.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","googleAuthProvider","GoogleAuthProvider","useForm","useState","values","setValues","reset","handleInputChange","target","value","setError","err","finishLoading","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","catch","e","console","log","Swal","fire","message","logout","LoginScreen","useDispatch","useSelector","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","JournalEntry","style","backgroundSize","backgroundImage","JournalEntries","map","key","Sidebar","signOut","NotesAppBar","NoteScreen","JournalScreen","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","useEffect","onAuthStateChanged","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAEF,eAFEA,EAGD,gBAHCA,EAKG,iBALHA,EAMM,oBANNA,EAQO,qBARPA,EASQ,sB,OCTfC,EAAe,CACjBC,SAAS,EACTC,SAAU,MCERC,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAErGC,EAAWC,YAAgB,CAC7BC,KCDuB,WAA2B,IAAzBC,EAAwB,uDAAhB,GAAIC,EAAY,uCAEjD,OAASA,EAAOC,MACZ,KAAKb,EACD,MAAO,CACHc,IAAKF,EAAOG,QAAQD,IACpBE,KAAMJ,EAAOG,QAAQE,aAG7B,KAAKjB,EACG,MAAO,GAEf,QACI,OAAOW,IDXfO,GDFqB,WAAqC,IAAnCP,EAAkC,uDAA1BV,EAAcW,EAAY,uCAEzD,OAASA,EAAOC,MACZ,KAAKb,EACD,OAAO,2BACAW,GADP,IAEIR,SAAUS,EAAOG,UAGzB,KAAKf,EACG,OAAO,2BACAW,GADP,IAEIR,SAAU,OAGtB,KAAKH,EACD,OAAO,2BACAW,GADP,IAEIT,SAAS,IAGjB,KAAKF,EACD,OAAO,2BACAW,GADP,IAEIT,SAAS,IAGjB,QACI,OAAOS,MCtBNQ,EAAQC,YACjBZ,EACAJ,EACIiB,YAAiBC,O,oDEHzBC,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKRR,IAASS,YAApB,IACMC,EAAqB,IAAIV,IAASb,KAAKwB,mB,QCdhCC,EAAU,WAA0B,IAAxBlC,EAAuB,uDAAR,GAAQ,EAEhBmC,mBAASnC,GAFO,mBAErCoC,EAFqC,KAE7BC,EAF6B,KAItCC,EAAQ,WACVD,EAAWrC,IAITuC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOzB,KAAQyB,EAAOC,UAKhC,MAAO,CAAEL,EAAQG,EAAmBD,I,0CCnB3BI,EAAW,SAAEC,GAAF,MAAY,CAChC/B,KAAMb,EACNe,QAAS6B,IAUAC,EAAgB,iBAAO,CAChChC,KAAMb,ICRG8C,EAA0B,SAACC,EAAOC,GAC3C,OAAO,SAACC,GAEJA,EDC2B,CAC/BpC,KAAMb,ICCFuB,IAASb,OAAOwC,2BAA4BH,EAAOC,GAC9CG,MAAM,YAAe,IAAZC,EAAW,EAAXA,KACNH,EAASI,EAAOD,EAAKtC,IAAKsC,EAAKnC,cAE/BgC,EAAUJ,QAEbS,OAAO,SAAAC,GACJC,QAAQC,IAAIF,GACZN,EAAUJ,KACVa,IAAKC,KAAK,QAASJ,EAAEK,QAAS,cA4CjCP,EAAQ,SAACvC,EAAKG,GAAN,MAAuB,CACxCJ,KAAMb,EACNe,QAAS,CACLD,MACAG,iBAcK4C,EAAS,iBAAO,CACzBhD,KAAMb,IC9EG8D,EAAc,WAEvB,IAAMb,EAAWc,cACT7D,EAAY8D,aAAa,SAAArD,GAAK,OAAIA,EAAMO,MAAxChB,QAHqB,EAKaiC,EAAQ,CAC9CY,MAAO,iBACPC,SAAU,YAPe,mBAKrBiB,EALqB,KAKTzB,EALS,KAUrBO,EAAoBkB,EAApBlB,MAAOC,EAAaiB,EAAbjB,SAYf,OACI,oCACI,wBAAIkB,UAAU,eAAd,SAEA,0BAAMC,SAdM,SAACZ,GACjBA,EAAEa,iBACFnB,EAAUH,EAAyBC,EAAOC,MAclC,2BACInC,KAAK,OACLwD,YAAY,QACZrD,KAAK,QACLkD,UAAU,cACVI,aAAa,MACb5B,MAAQK,EACRwB,SAAW/B,IAGf,2BACI3B,KAAK,WACLwD,YAAY,WACZrD,KAAK,WACLkD,UAAU,cACVxB,MAAQM,EACRuB,SAAW/B,IAIf,4BACI3B,KAAK,SACLqD,UAAU,4BACVM,SAAWtE,GAHf,SASA,yBAAKgE,UAAU,yBACX,yDAEA,yBACIA,UAAU,aACVO,QA7CM,WACtBxB,GD4BG,SAAEA,GAEL1B,IAASb,OAAOgE,gBAAiBzC,GAC5BkB,MAAM,YAAe,IAAZC,EAAW,EAAXA,KACNH,EACII,EAAOD,EAAKtC,IAAKsC,EAAKnC,sBCalB,yBAAKiD,UAAU,uBACX,yBAAKA,UAAU,cAAcS,IAAI,8EAA8EC,IAAI,mBAEvH,uBAAGV,UAAU,YACT,qDAKZ,kBAAC,IAAD,CACIW,GAAG,iBACHX,UAAU,QAFd,yB,iBCvEHY,EAAiB,WAE1B,IAAM7B,EAAWc,cACT5D,EAAa6D,aAAa,SAAArD,GAAK,OAAIA,EAAMO,MAAzCf,SAHwB,EAKUgC,EAAQ,CAC9CnB,KAAM,WACN+B,MAAO,iBACPC,SAAU,UACV+B,UAAW,YATiB,mBAKxBd,EALwB,KAKZzB,EALY,KAYxBxB,EAAqCiD,EAArCjD,KAAM+B,EAA+BkB,EAA/BlB,MAAOC,EAAwBiB,EAAxBjB,SAAU+B,EAAcd,EAAdc,UAWzBC,EAAc,WAEhB,OAA4B,IAAvBhE,EAAKiE,OAAOC,QACbjC,EAAUN,EAAS,sBACZ,GACEwC,IAAUC,QAASrC,GAGpBC,IAAa+B,GAAa/B,EAASkC,OAAS,GACpDjC,EAAUN,EAAS,mEACZ,IAGXM,EHtC0B,CAC9BpC,KAAMb,KGsCI,IARFiD,EAAUN,EAAS,wBACZ,IAUf,OACI,oCACI,wBAAIuB,UAAU,eAAd,YAEA,0BAAMC,SA9BS,SAACZ,GACpBA,EAAEa,iBAEGY,KACD/B,EFGsC,SAAEF,EAAOC,EAAUhC,GACjE,OAAO,SAAEiC,GAEL1B,IAASb,OAAO2E,+BAAgCtC,EAAOC,GAClDG,KADL,uCACW,6BAAAmC,EAAA,6DAAQlC,EAAR,EAAQA,KAAR,SAEGA,EAAKmC,cAAc,CAAEtE,YAAaD,IAFrC,OAIHiC,EACII,EAAOD,EAAKtC,IAAKsC,EAAKnC,cALvB,2CADX,uDASKqC,OAAO,SAAAC,GACJC,QAAQC,IAAIF,GACZG,IAAKC,KAAK,QAASJ,EAAEK,QAAS,aEjBxB4B,CAAmCzC,EAAOC,EAAUhC,MA6BtDb,GAEI,yBAAK+D,UAAU,qBACT/D,GAMd,2BACIU,KAAK,OACLwD,YAAY,OACZrD,KAAK,OACLkD,UAAU,cACVI,aAAa,MACb5B,MAAQ1B,EACRuD,SAAW/B,IAGf,2BACI3B,KAAK,OACLwD,YAAY,QACZrD,KAAK,QACLkD,UAAU,cACVI,aAAa,MACb5B,MAAQK,EACRwB,SAAW/B,IAGf,2BACI3B,KAAK,WACLwD,YAAY,WACZrD,KAAK,WACLkD,UAAU,cACVxB,MAAQM,EACRuB,SAAW/B,IAGf,2BACI3B,KAAK,WACLwD,YAAY,mBACZrD,KAAK,YACLkD,UAAU,cACVxB,MAAQqC,EACRR,SAAW/B,IAIf,4BACI3B,KAAK,SACLqD,UAAU,kCAFd,YASA,kBAAC,IAAD,CACIW,GAAG,cACHX,UAAU,QAFd,0BC3GHuB,EAAa,WACtB,OACI,yBAAKvB,UAAU,cACX,yBAAKA,UAAU,uBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIwB,OAAK,EACLC,KAAK,cACLC,UAAY9B,IAGhB,kBAAC,IAAD,CACI4B,OAAK,EACLC,KAAK,iBACLC,UAAYd,IAGhB,kBAAC,IAAD,CAAUD,GAAG,oB,QCjBpBgB,EAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,+CAEF,OACI,kBAAC,IAAD,iBAAYA,EAAZ,CACIJ,UAAY,SAACK,GAAD,OACNH,EACM,kBAACC,EAAeE,GAChB,kBAAC,IAAD,CAAUpB,GAAG,qBCfxBqB,EAAe,WACxB,OACI,yBAAKhC,UAAU,0BAEX,yBACIA,UAAU,yBACViC,MAAO,CACHC,eAAgB,QAChBC,gBAAiB,wHAIzB,yBAAKnC,UAAU,uBACX,uBAAGA,UAAU,wBAAb,mBAGA,uBAAGA,UAAU,0BAAb,iEAKJ,yBAAKA,UAAU,2BACX,wCACA,qCCtBHoC,EAAiB,WAK1B,OACI,yBAAKpC,UAAU,oBAJH,CAAC,EAAE,EAAE,EAAE,EAAE,GAOLqC,KAAK,SAAA7D,GAAK,OACd,kBAAC,EAAD,CAAc8D,IAAM9D,SCP3B+D,EAAU,WAEnB,IAAMxD,EAAWc,cACT/C,EAASgD,aAAY,SAAArD,GAAK,OAAIA,EAAMD,QAApCM,KAMR,OACI,2BAAOkD,UAAU,oBAEb,yBAAKA,UAAU,2BACX,wBAAIA,UAAU,QACV,uBAAGA,UAAU,gBACb,kCAAQlD,IAGZ,4BACIkD,UAAU,MACVO,QAfI,WAChBxB,EPgEJ,uCAAO,WAAOA,GAAP,SAAAqC,EAAA,sEACG/D,IAASb,OAAOgG,UADnB,OAGHzD,EAAUY,KAHP,2CAAP,yDOpDY,WAQJ,yBAAKK,UAAU,sBACX,uBAAGA,UAAU,+BACb,uBAAGA,UAAU,QAAb,cAKJ,kBAAC,EAAD,QCrCCyC,EAAc,WACvB,OACI,yBAAKzC,UAAU,iBACX,mDAEA,6BACI,4BAAQA,UAAU,OAAlB,WAIA,4BAAQA,UAAU,OAAlB,WCTH0C,EAAa,WACtB,OACI,yBAAK1C,UAAU,uBAEX,kBAAC,EAAD,MAEA,yBAAKA,UAAU,kBAEX,2BACIrD,KAAK,OACLwD,YAAY,qBACZH,UAAU,qBACVI,aAAa,QAGjB,8BACID,YAAY,sBACZH,UAAU,oBAGd,yBAAKA,UAAU,gBACX,yBACIS,IAAI,sEACJC,IAAI,eCpBfiC,EAAgB,WACzB,OACI,yBAAK3C,UAAU,yBAEX,kBAAC,EAAD,MAGA,8BAGI,kBAAC,EAAD,SCVH4C,EAAc,SAAC,GAIrB,IAHHhB,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,+CAEF,OACI,kBAAC,IAAD,iBAAYA,EAAZ,CACIJ,UAAY,SAACK,GAAD,OACNH,EACM,kBAAC,IAAD,CAAUjB,GAAG,MACb,kBAACkB,EAAeE,QCA3Bc,EAAY,WAErB,IAAM9D,EAAWc,cAFU,EAIO3B,oBAAS,GAJhB,mBAInB4E,EAJmB,KAITC,EAJS,OAKW7E,oBAAS,GALpB,mBAKnB8E,EALmB,KAKPC,EALO,KA2B3B,OAlBAC,qBAAU,WAEN7F,IAASb,OAAO2G,oBAAoB,SAACjE,IAEjC,OAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAMtC,MACPmC,EAAUI,EAAOD,EAAKtC,IAAKsC,EAAKnC,cAChCkG,GAAe,IAEfA,GAAe,GAGnBF,GAAY,QAIjB,CAAEhE,EAAUgE,EAAaE,IAGvBH,EAEG,yCAMJ,kBAAC,IAAD,KACI,6BACI,kBAAC,IAAD,KACI,kBAAC,EAAD,CACIrB,KAAK,QACLC,UAAYH,EACZK,gBAAkBoB,IAGtB,kBAAC,EAAD,CACIxB,OAAK,EACLI,gBAAkBoB,EAClBvB,KAAK,IACLC,UAAYiB,IAGhB,kBAAC,IAAD,CAAUhC,GAAG,oBC5DpByC,GAAa,WACtB,OACI,kBAAC,IAAD,CAAUnG,MAAQA,GACd,kBAAC,EAAD,Q,OCHZoG,IAASC,OACP,kBAAC,GAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0e9dfb10.chunk.js","sourcesContent":["\n\nexport const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n\n        case types.uiRemoveError:\n                return {\n                    ...state,\n                    msgError: null\n                }\n\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n \n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n\n        default:\n            return state;\n    }\n\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from '../reducers/authReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer\n});\n\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","import { types } from '../types/types';\n/*\n    {\n        uid: 'jagdfjahdsf127362718',\n        name: 'Fernando'\n    }\n\n*/\nexport const authReducer = ( state = {}, action ) => {\n\n    switch ( action.type ) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n\n        case types.logout:\n                return { }\n    \n        default:\n            return state;\n    }\n\n}","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCAdGm5n8lQTs2AMHyUM7Kd6hW7gL6Z-uA\",\n    authDomain: \"duki-app-fbase.firebaseapp.com\",\n    projectId: \"duki-app-fbase\",\n    storageBucket: \"duki-app-fbase.appspot.com\",\n    messagingSenderId: \"782991604216\",\n    appId: \"1:782991604216:web:2bc0f7033c13e4b1dcbe0d\",\n    measurementId: \"G-B1HTXS27Y5\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n\nexport {\n    db,\n    googleAuthProvider,\n    firebase\n}","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import { types } from '../types/types';\n\nexport const setError = ( err ) => ({\n    type: types.uiSetError,\n    payload: err\n});\n\nexport const removeError = () => ({\n    type: types.uiRemoveError\n});\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading\n})\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading\n})\n\n","import Swal from 'sweetalert2';\n\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { startLoading, finishLoading } from './ui';\n\n\nexport const startLoginEmailPassword = (email, password) => {\n    return (dispatch) => {\n\n        dispatch( startLoading() );\n        \n        \n        firebase.auth().signInWithEmailAndPassword( email, password )\n            .then( ({ user }) => {\n                dispatch(login( user.uid, user.displayName ));\n\n                dispatch( finishLoading() );\n            })\n            .catch( e => {\n                console.log(e);\n                dispatch( finishLoading() );\n                Swal.fire('Error', e.message, 'error');\n            })\n\n        \n        \n    }\n}\n\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\n    return ( dispatch ) => {\n\n        firebase.auth().createUserWithEmailAndPassword( email, password )\n            .then( async({ user }) => {\n\n                await user.updateProfile({ displayName: name });\n\n                dispatch(\n                    login( user.uid, user.displayName )\n                );\n            })\n            .catch( e => {\n                console.log(e);\n                Swal.fire('Error', e.message, 'error');\n            })\n\n    }\n}\n\n\n\nexport const startGoogleLogin = () => {\n    return ( dispatch ) => {\n\n        firebase.auth().signInWithPopup( googleAuthProvider )\n            .then( ({ user }) => {\n                dispatch(\n                    login( user.uid, user.displayName )\n                )\n            });\n\n    }\n}\n\n\nexport const login = (uid, displayName) => ({\n    type: types.login,\n    payload: {\n        uid,\n        displayName\n    }\n});\n\n\nexport const startLogout = () => {\n    return async( dispatch ) => {\n        await firebase.auth().signOut();\n\n        dispatch( logout() );\n    }\n}\n\n\nexport const logout = () => ({\n    type: types.logout\n})\n\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const { loading } = useSelector( state => state.ui );\n\n    const [ formValues, handleInputChange ] = useForm({\n        email: 'duki@gmail.com',\n        password: 'Duki123'\n    });\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch( startLoginEmailPassword( email, password ) );\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch( startGoogleLogin() );\n    }\n\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form onSubmit={ handleLogin }>\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={ loading }\n                >\n                    Login\n                </button>\n\n                \n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div \n                        className=\"google-btn\"\n                        onClick={ handleGoogleLogin }\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account    \n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector} from 'react-redux';\nimport validator from 'validator';\n\nimport { useForm } from '../../hooks/useForm';\nimport { setError, removeError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector( state => state.ui );\n\n    const [ formValues, handleInputChange ] = useForm({\n        name: 'Duki Fdz',\n        email: 'duki@gmail.com',\n        password: 'Duki123',\n        password2: 'Duki123',\n    });\n\n    const { name ,email ,password ,password2 } = formValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if ( isFormValid() ) {\n            dispatch( startRegisterWithEmailPasswordName(email, password, name) );\n        }\n\n    }\n\n    const isFormValid = () => {\n        \n        if ( name.trim().length === 0 ) {\n            dispatch( setError('Name is required') )\n            return false;\n        } else if ( !validator.isEmail( email ) ) {\n            dispatch( setError('Email is not valid') )\n            return false;\n        } else if ( password !== password2 || password.length < 5 ) {\n            dispatch( setError('Password should be at least 6 characters and match each other') )\n            return false\n        }\n        \n        dispatch( removeError() );\n       return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form onSubmit={ handleRegister }>\n\n                {\n                    msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            { msgError }\n                        </div>\n                    )\n                }\n\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ name }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={ password2 }\n                    onChange={ handleInputChange }\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n               \n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const JournalEntry = () => {\n    return (\n        <div className=\"journal__entry pointer\">\n            \n            <div \n                className=\"journal__entry-picture\"\n                style={{\n                    backgroundSize: 'cover',\n                    backgroundImage: 'url(https://earthsky.org/upl/2018/12/comet-wirtanen-Jack-Fusco-dec-2018-Anza-Borrego-desert-CA-e1544613895713.jpg)'\n                }}\n            ></div>\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    Un nuevo día\n                </p>\n                <p className=\"journal__entry-content\">\n                    Reprehenderit id in duis consectetur deserunt veniam fugiat.\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>Monday</span>\n                <h4>28</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const entries = [1,2,3,4,5 ];\n\n\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                entries.map( value => (\n                    <JournalEntry key={ value } />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { JournalEntries } from './JournalEntries'\nimport { startLogout } from '../../actions/auth';\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector(state => state.auth);\n\n    const hanleLogout = () => {\n        dispatch( startLogout() )\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> {name}</span>\n                </h3>\n\n                <button \n                    className=\"btn\"\n                    onClick={ hanleLogout }\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div className=\"journal__new-entry\">\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />    \n\n        </aside>\n    )\n}\n","import React from 'react'\n\nexport const NotesAppBar = () => {\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de agosto 2020</span>\n\n            <div>\n                <button className=\"btn\">\n                    Picture\n                </button>\n\n                <button className=\"btn\">\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                ></textarea>\n\n                <div className=\"notes__image\">\n                    <img \n                        src=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg\"\n                        alt=\"imagen\"\n                    />\n                </div>\n\n\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\n// import { NothingSelected } from './NothingSelected';\n\n\nexport const JournalScreen = () => {\n    return (\n        <div className=\"journal__main-content\">\n            \n            <Sidebar />\n\n\n            <main>\n\n                {/* <NothingSelected /> */}\n                <NoteScreen />\n\n            </main>\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\n\nimport { firebase } from '../firebase/firebase-config'\nimport { AuthRouter } from './AuthRouter';\nimport { PrivateRoute } from './PrivateRoute';\n\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { login } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [ checking, setChecking ] = useState(true);\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\n\n\n\n    useEffect(() => {\n        \n        firebase.auth().onAuthStateChanged( (user) => {\n\n            if ( user?.uid ) {\n                dispatch( login( user.uid, user.displayName ) );\n                setIsLoggedIn( true );\n            } else {\n                setIsLoggedIn( false );\n            }\n\n            setChecking(false);\n\n        });\n        \n    }, [ dispatch, setChecking, setIsLoggedIn ])\n\n\n    if ( checking ) {\n        return (\n            <h1>Espere...</h1>\n        )\n    }\n\n    \n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        path=\"/auth\"\n                        component={ AuthRouter }\n                        isAuthenticated={ isLoggedIn }\n                    />\n\n                    <PrivateRoute \n                        exact\n                        isAuthenticated={ isLoggedIn }\n                        path=\"/\"\n                        component={ JournalScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\n\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}